{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNfWBBntiDswF6MwlLoXFEk",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/yashghate25/House_Price_Prediction_using_AIML/blob/main/house_price_dataset_500_csv.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WAXfgJronswS",
        "outputId": "5d500e1f-9588-4d6a-da76-dae360dcc1f7"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Synthetic dataset created and saved as 'house_price_dataset_500.csv'\n",
            "  Location  HouseSize  Bedrooms  Bathrooms  YearBuilt  Garage  HasPool  \\\n",
            "0    Rural       4230         2          2       1912       1        0   \n",
            "1    Urban       2989         1          1       1985       1        0   \n",
            "2    Rural       2131         4          2       1918       1        1   \n",
            "3    Rural       3316         2          2       1933       1        0   \n",
            "4    Urban       1515         1          1       1977       0        0   \n",
            "\n",
            "       SalePrice  \n",
            "0  726915.111594  \n",
            "1  543121.065395  \n",
            "2  428687.512962  \n",
            "3  607643.453322  \n",
            "4  335736.192466  \n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "\n",
        "# Set random seed for reproducibility\n",
        "np.random.seed(42)\n",
        "\n",
        "# Number of samples\n",
        "data_size = 500\n",
        "\n",
        "# Generate features\n",
        "Location = np.random.choice(['Urban', 'Suburban', 'Rural'], size=data_size)\n",
        "HouseSize = np.random.randint(500, 5000, size=data_size)  # in square feet\n",
        "Bedrooms = np.random.randint(1, 6, size=data_size)\n",
        "Bathrooms = np.random.randint(1, 4, size=data_size)\n",
        "YearBuilt = np.random.randint(1900, 2023, size=data_size)\n",
        "Garage = np.random.choice([0, 1], size=data_size, p=[0.3, 0.7])  # 30% without garage\n",
        "HasPool = np.random.choice([0, 1], size=data_size, p=[0.8, 0.2])  # 20% with pool\n",
        "\n",
        "# Generate target (house prices) with some randomness\n",
        "BasePrice = 50000\n",
        "PricePerSqFt = 150\n",
        "PricePerBedroom = 10000\n",
        "PricePerBathroom = 8000\n",
        "GaragePremium = 15000\n",
        "PoolPremium = 20000\n",
        "\n",
        "SalePrice = (\n",
        "    BasePrice +\n",
        "    (HouseSize * PricePerSqFt) +\n",
        "    (Bedrooms * PricePerBedroom) +\n",
        "    (Bathrooms * PricePerBathroom) +\n",
        "    (Garage * GaragePremium) +\n",
        "    (HasPool * PoolPremium) +\n",
        "    np.random.normal(0, 20000, size=data_size)  # Adding noise\n",
        ")\n",
        "\n",
        "# Combine into a DataFrame\n",
        "data = pd.DataFrame({\n",
        "    'Location': Location,\n",
        "    'HouseSize': HouseSize,\n",
        "    'Bedrooms': Bedrooms,\n",
        "    'Bathrooms': Bathrooms,\n",
        "    'YearBuilt': YearBuilt,\n",
        "    'Garage': Garage,\n",
        "    'HasPool': HasPool,\n",
        "    'SalePrice': SalePrice\n",
        "})\n",
        "\n",
        "# Save dataset to a CSV file\n",
        "file_name = 'house_price_dataset_500.csv'\n",
        "data.to_csv(file_name, index=False)\n",
        "print(f\"Synthetic dataset created and saved as '{file_name}'\")\n",
        "\n",
        "# Display a preview of the dataset\n",
        "print(data.head())\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "15gcHKkanuYe"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
